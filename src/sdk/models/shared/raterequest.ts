/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Package } from "./package";
import { Piece } from "./piece";
import { ServiceCode } from "./servicecode";
import { ShipFromAddress } from "./shipfromaddress";
import { ShipToAddress } from "./shiptoaddress";
import { TermsOfTrade } from "./termsoftrade";
import { Expose, Type } from "class-transformer";

export class RateRequest extends SpeakeasyBase {
    /**
     * Your unique FlavorCloud Application ID we created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "AppID" })
    appID: string;

    /**
     * currency for the rate
     */
    @SpeakeasyMetadata()
    @Expose({ name: "Currency" })
    currency: string;

    /**
     * Your unique FlavorCloud customer key we created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "CustomerKey" })
    customerKey?: string;

    /**
     * Unit for dimensions of the shipment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "DimensionUnit" })
    dimensionUnit: string;

    /**
     * Include Landed cost for DDP rates. Default is true
     */
    @SpeakeasyMetadata()
    @Expose({ name: "IncludeLandedCost" })
    includeLandedCost?: boolean;

    /**
     * Specify if insurance is required.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "Insurance" })
    insurance: string;

    /**
     * You can easily create return labels. All you need to do is set the IsReturn parameter to "Y", leave the addresses the same as the initial Shipment's creation request and we switch the To and From Addresses for the return Shipment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "IsReturn" })
    isReturn?: string;

    /**
     * LabelFormat
     */
    @SpeakeasyMetadata()
    @Expose({ name: "LabelFormat" })
    labelFormat?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "Package" })
    @Type(() => Package)
    package: Package;

    /**
     * List of pieces included in an order and details of each piece
     */
    @SpeakeasyMetadata({ elemType: Piece })
    @Expose({ name: "Pieces" })
    @Type(() => Piece)
    pieces: Piece[];

    /**
     * State the key reason for the shipment. Possible values could be 'documents', 'gift', 'merchandise', 'returned_goods', 'sample', or 'other'
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ReasonForExport" })
    reasonForExport: string;

    /**
     * This field is for your reference., A good use of it would be to provide your order number here.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "Reference" })
    reference: string;

    /**
     * Your unique FlavorCloud Rest API key we created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "RestApiKey" })
    restApiKey: string;

    /**
     * Possible values could be 'STANDARD' | 'EXPRESS' | 'ECONOMY'. Default is STANDARD
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ServiceCode" })
    serviceCode: ServiceCode[];

    @SpeakeasyMetadata()
    @Expose({ name: "ShipFromAddress" })
    @Type(() => ShipFromAddress)
    shipFromAddress: ShipFromAddress;

    @SpeakeasyMetadata()
    @Expose({ name: "ShipToAddress" })
    @Type(() => ShipToAddress)
    shipToAddress: ShipToAddress;

    /**
     * Terms of trade can be Delivery Duty Paid (DDP) or Delivery Duty Unpaid (DDU). Default is DDP
     */
    @SpeakeasyMetadata()
    @Expose({ name: "TermsOfTrade" })
    termsOfTrade: TermsOfTrade[];

    /**
     * Unit for weight of the shipment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "WeightUnit" })
    weightUnit: string;
}
